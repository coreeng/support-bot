image:
  repository: support-bot-integration-tests
  tag: latest
  pullPolicy: IfNotPresent

nameOverride: ""
fullnameOverride: ""

serviceAccount:
  create: true
  annotations: {}
  name: "support-bot-integration-tests"
  role:
    create: true
    rules:
      # ConfigMap operations - create/delete for test setup/cleanup and team scraping by service
      - apiGroups: [""]
        resources: ["configmaps"]
        verbs: ["get", "list", "watch", "create", "patch", "update", "delete"]

      # Pod operations - for status checking
      - apiGroups: [""]
        resources: ["pods"]
        verbs: ["get", "list", "watch"]
      
      # Service operations - for service discovery and verification
      - apiGroups: [""]
        resources: ["services"]
        verbs: ["get", "list", "create", "delete"]

      # Deployment operations - for waiting until ready
      - apiGroups: ["apps"]
        resources: ["statefulsets", "deployments", "replicasets"]
        verbs: ["get", "list", "watch", "create", "delete"]

      # RBAC operation for deploying the service
      - apiGroups: [""]
        resources: ["serviceaccounts"]
        verbs: ["get", "list", "create", "delete"]
      - apiGroups: ["rbac.authorization.k8s.io"]
        resources: ["roles", "rolebindings"]
        verbs: ["get", "list", "create", "delete"]

job:
  restartPolicy: Never
  backoffLimit: 1
  activeDeadlineSeconds: 180  # 3 minutes timeout
  parallelism: 1
  completions: 1

podSecurityContext:
  runAsNonRoot: true
  runAsUser: 185
  runAsGroup: 185
  fsGroup: 185
  seccompProfile:
    type: RuntimeDefault

securityContext:
  allowPrivilegeEscalation: false
  readOnlyRootFilesystem: true
  capabilities:
    drop: ["ALL"]

# ConfigMap configuration
configMap:
  config:
    namespace: support-bot-integration
    service:
      deploymentScript:
        releaseName: support-bot
        chartPath: /app/k8s/service
        scriptPath: /app/scripts/deploy-service.sh
      deployment:
        name: support-bot
      image:
        repository: support-bot
        tag: latest
    portForwarding:
      enabled: false
      localPort: 8080
      remotePort: 8080


resources:
  requests:
    cpu: 256m
    memory: 1Gi

nodeSelector: {}

tolerations: []

affinity: {}
