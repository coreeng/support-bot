image:
  repository: support-bot
  tag: ""
  pullPolicy: IfNotPresent

nameOverride: ""
fullnameOverride: ""

serviceAccount:
  create: true
  annotations: {}
  name: ""
  role:
    create: true
    rules:
      - apiGroups: [""]
        resources: ["configmaps"]
        verbs: ["get", "list", "watch"]

podAnnotations: {}
podSecurityContext:
  runAsNonRoot: true
  runAsUser: 185
  runAsGroup: 185
  fsGroup: 185
  seccompProfile:
    type: RuntimeDefault
securityContext:
  allowPrivilegeEscalation: false
  readOnlyRootFilesystem: true
  capabilities:
    drop: ["ALL"]

service:
  type: ClusterIP
  port: 8080

ingress:
  enabled: false
  className: ""
  annotations: {}
  hosts:
    - host: support-bot.example
      paths:
        - path: /
          pathType: ImplementationSpecific

resources:
  requests:
    cpu: 512m
    memory: 512Mi

livenessProbe:
  httpGet:
    path: /health
    port: 8081
  failureThreshold: 6
  periodSeconds: 40
  successThreshold: 1
  timeoutSeconds: 2

readinessProbe:
  httpGet:
    path: /health
    port: 8081
  failureThreshold: 6
  periodSeconds: 40
  successThreshold: 1
  timeoutSeconds: 2

metrics:
  enabled: true
  port: 8081

nodeSelector: {}

tolerations: []

affinity: {}

# Environment variables
env:
  - name: DB_URL
    value: "jdbc:postgresql://support-bot-db-postgresql:5432/supportbot"
  - name: DB_USERNAME
    value: "supportbot"
  - name: DB_PASSWORD
    value: "supportbotpassword"
  - name: SLACK_TOKEN
    valueFrom:
      secretKeyRef:
        name: support-bot
        key: SLACK_TOKEN
  - name: SLACK_SOCKET_TOKEN
    valueFrom:
      secretKeyRef:
        name: support-bot
        key: SLACK_SOCKET_TOKEN
  - name: SLACK_SIGNING_SECRET
    valueFrom:
      secretKeyRef:
        name: support-bot
        key: SLACK_SIGNING_SECRET

# ConfigMap configuration
configMap:
  create: true
  name: ""
  annotations: {}
  data:
    # your properties for application.yaml
